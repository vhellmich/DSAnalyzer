#ifndef DATAHANDLER_H_
#define DATAHANDLER_H_

#include <string>
#include <iomanip>
#include <sstream>
#include <ctime>

class DateHandler {
public:
    /// <summary>
	/// Returns the first and last day of the month for a given year and month.
    /// </summary>
    /// <param name="year"></param>
    /// <param name="month"></param>
    /// <returns></returns>
    // generated by AI.
    static std::pair<std::string, std::string> GetMonthDateRange(int year, int month) {
        // Ensure the month is valid
        if (month < 1 || month > 12) {
            throw std::invalid_argument("Month must be between 1 and 12");
        }

        // First day of the month
        std::ostringstream firstDayStream;
        firstDayStream << std::setw(4) << std::setfill('0') << year << "-"
            << std::setw(2) << std::setfill('0') << month << "-01";
        std::string firstDay = firstDayStream.str();

        // Calculate the last day of the month
        std::tm time = {};
        time.tm_year = year - 1900; // tm_year is years since 1900
        time.tm_mon = month;       // tm_mon is 0-based, so set to next month
        time.tm_mday = 0;          // Set to 0 to get the last day of the previous month
        std::mktime(&time);        // Normalize the time structure

        std::ostringstream lastDayStream;
        lastDayStream << std::setw(4) << std::setfill('0') << year << "-"
            << std::setw(2) << std::setfill('0') << month << "-"
            << std::setw(2) << std::setfill('0') << time.tm_mday;
        std::string lastDay = lastDayStream.str();

        return { firstDay, lastDay };
    }
};



#endif 
